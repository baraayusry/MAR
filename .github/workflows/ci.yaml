
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9, '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .
    
    - name: Lint with flake8
      run: |
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type check with mypy
      run: |
        if compgen -G "src/**/*.py" > /dev/null; then
          mypy src
        else
          echo "No Python files in src, skipping mypy"
        fi
    
    - name: Format check with black
      run: |
        if compgen -G "src/**/*.py" > /dev/null; then
          black --check src
        else
          echo "No Python files in src, skipping black"
        fi
    
    - name: Import sort check with isort
      run: |
        if compgen -G "src/**/*.py" > /dev/null; then
          isort --check-only src
        else
          echo "No Python files in src, skipping isort"
        fi
    
    - name: Test with pytest
      run: |
        if compgen -G "tests/**/*.py" > /dev/null; then
          pytest tests/ --cov=src --cov-report=xml --cov-report=term-missing
        else
          echo "No tests found, skipping tests"
        fi

    - name: Upload coverage to Codecov
      if: ${{ hashFiles('tests/**/*.py') != '' && secrets.CODECOV_TOKEN != '' }}
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Run safety check
      run: safety check
    
    - name: Run bandit security check
      run: bandit -r src
